<% # google direction api code start %>
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<script>

  function initMap() {
    const directionsRenderer = new google.maps.DirectionsRenderer();
    const directionsService = new google.maps.DirectionsService();
    const map = new google.maps.Map(document.getElementById("map"), {
      zoom: 14,
    //   center: { lat: 37.77, lng: -122.447 },
    });
    directionsRenderer.setMap(map);
    calculateAndDisplayRoute(directionsService, directionsRenderer);
    document.getElementById("mode").addEventListener("change", () => {
      calculateAndDisplayRoute(directionsService, directionsRenderer);
    });
  }

  function calculateAndDisplayRoute(directionsService, directionsRenderer) {
    const selectedMode = document.getElementById("mode").value;
    console.log(gon.from_address_lat)
    console.log(gon.from_address_lon)
    console.log(gon.to_address_lat)
    console.log(gon.to_address_lon)
    directionsService.route(
      {
        origin: { lat: gon.from_address_lat, lng: gon.from_address_lon },
        destination: { lat: gon.to_address_lat, lng: gon.to_address_lon },
        // Note that Javascript allows us to access the constant
        // using square brackets and a string value as its
        // "property."
        travelMode: google.maps.TravelMode[selectedMode],
      },
      (response, status) => {
        if (status == "OK") {
          directionsRenderer.setDirections(response);
        } else {
          window.alert("Directions request failed due to " + status);
        }
      }
    );
  }
</script>
<% # google direction api code end %>

<% # geocoder to calculate coordinates, distance and estimated price start %>
<% 
  # remove condition later because no need
  if @current_customer.nil?
    current_booking = Booking.find params[:id]
  else
    current_booking = Booking.find params[:id]
  end

  from_coordinates = Geocoder.coordinates("#{current_booking.from_address}")

  to_coordinates = Geocoder.coordinates("#{current_booking.to_address}")

  distance = (Geocoder::Calculations.distance_between([from_coordinates[0],from_coordinates[1]], [to_coordinates[0],to_coordinates[1]])*1.60934 *1.15).round(2)
  #1.60934 is to transfer mile into km; 1.15 is estimated transfer from straight distance between coordinates to actual routes distance

  estimated_price = (distance * 2.7).round(2)
  # 2.7 is estimated transfer from distance to price
  @booking.estimated_price = estimated_price
  @booking.save
%>
<% # geocoder to calculate coordinates, distance and estimated price end %>

<div id="booking-show-offset1" class="row">
  <div class="col-md-12"></div>
</div>

<div id="booking-show-main" class="row">
  <div class="col-md-4 offset-md-1">
    <ul>
      <li>From: <%= @booking.from_address %></li>
      <li>To: <%= @booking.to_address %></li>
      <li>Distance: <%= distance %> km</li>
      <li>Estimated price: $<%= estimated_price %></li>
      <% if @booking.driver.present? %>
      <li>Driver: <%=link_to @booking.driver.email, @booking.driver %></li>
      <% end %>
    </ul>

    <% if @booking.status=="new" %>
      <div class="controls">  
        <div class="row">
          <div class="col-md-6">
            <%= button_to 'Cancel booking', @booking, :method => 'delete', :data => {:confirm => 'Are you sure?' }, class: "button btn-danger"%>
          </div>

          <div class="col-md-6">
              <%= form_for @booking do |t|%>
              <%= t.hidden_field :status, @booking.status=> "confirmed" %>
              <%= t.submit "Confirm booking", class: "button btn-success", :id=>"confirm-booking" %>
              <% end %>
          </div>
        </div>
      </div>
    <% end %>
  </div>

  <div class="col-md-7">
    <div id="floating-panel">
      <b>Mode of Travel: </b>
      <select id="mode">
        <option value="DRIVING">Driving</option>
        <option value="WALKING">Walking</option>
        <option value="BICYCLING">Bicycling</option>
        <option value="TRANSIT">Transit</option>
      </select>
    </div>
    <div id="map"></div>
  </div>
</div>

<%# <div id="waiting_for_driver">
  <p>Waiting for driver to take the job...</p>
</div> %>

<% # google direction api code start %>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDjI23uIXRb73MjkDTGcrkN_OJy7i0dbS0&callback=initMap"></script>
<% # google direction api code end %>
